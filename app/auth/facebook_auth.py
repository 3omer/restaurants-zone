import json
from requests_oauthlib import OAuth2Session
from requests_oauthlib.compliance_fixes import facebook_compliance_fix

with open('app/auth/facebook_creds.json') as f:
    creds = json.load(f)

_AUTHORIZATION_BASE_URI = 'https://www.facebook.com/v4.0/dialog/oauth?'
_TOKEN_URL = 'https://graph.facebook.com/v4.0/oauth/access_token?'
_REDIRECT_URI = 'http://localhost:8000/auth/facebook/callback'
_SCOPE = ['public_profile', 'email']

# called with delete method
_REVOKE_URL = 'https://graph.facebook.com/me/permissions'

# use this to validate access token - belong to your app and generated by your user
_INSPECT_TOKEN_URL = 'https://graph.facebook.com/debug_token?'

_PROFILE_URL = 'https://graph.facebook.com/me?fields=name,email,picture'



class FaceBookOauthSession(OAuth2Session):
    def __init__(self, client_id=creds['CLIENT_ID'], scope=_SCOPE, redirect_uri=_REDIRECT_URI, token=None, state=None):
            super().__init__(client_id=cred['CLIENT_ID'], scope=scope, redirect_uri=redirect_uri, token=token, state=state)
            self = facebook_compliance_fix(self)

    def authorization_url(self):
        return OAuth2Session.authorization_url(self, _AUTHORIZATION_BASE_URI)

    def fetch_token(self, token_url=_TOKEN_URL, code=None, authorization_response=None, body='', auth=None, username=None, password=None, method='POST', timeout=None, headers=None, verify=True, proxies=None, include_client_id=None, client_secret=creds['CLIENT_SECRET'], **kwargs):
        return OAuth2Session.fetch_token(self, token_url, authorization_response=authorization_response, client_secret=client_secret)

    def inspect_token(self, input_token, app_token=creds['APP_TOKEN']):
        '''
        inspect token info : param : 
        input_token: token to inspect
        access_token: app-access token
        return data about the ispected token
        '''
        r = self.get(_INSPECT_TOKEN_URL, input_token=input_token, access_token=app_token).json()
        pass
    
    def user_info(self):
        '''get user profile info
        return: dict : keys: facebook_id, picture, email, access_token
        '''
        info = {}
        res = self.get(_PROFILE_URL).json()
        if 'error' in res:
            return res
        else:
            info['facebook_id'] = int(res.get('id'))
            info['email'] = res.get('email')
            info['name'] = res.get('name')
            info['picture'] = res.get('picture').get('data').get('url')
            info['access_token'] = self.token.get('access_token')
            return info

    def revoke(self):
        return self.delete(_REVOKE_URL) 

    @classmethod
    def authorized_session(cls, token):
        session = cls(token=token)
        return session